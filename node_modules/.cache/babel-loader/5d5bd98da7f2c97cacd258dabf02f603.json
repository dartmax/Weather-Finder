{"ast":null,"code":"import _regeneratorRuntime from \"/home/max/Desktop/Work/Wather_app/react-redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/max/Desktop/Work/Wather_app/react-redux-weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { WEATHER } from \"./Constants\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../components/ApiConstants\";\nimport { toast } from \"react-toastify\";\nexport var GetWeatherDetails = function GetWeatherDetails() {\n  var location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Kyiv\";\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: WEATHER.GET_WEATHER_LOADING\n              });\n              axios.get(BASE_URL, {\n                params: {\n                  q: location,\n                  units: \"Metric\",\n                  lang: \"en\"\n                }\n              }).then(function (response) {\n                return dispatch({\n                  type: WEATHER.GET_WEATHER_SUCCESS,\n                  payload: response.data\n                });\n              }).catch(function (err) {\n                console.log(err.response, err);\n                toast.error(err.response.data.message, {\n                  position: \"bottom-center\",\n                  autoClose: 3000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: false,\n                  draggable: false\n                });\n                dispatch({\n                  type: WEATHER.GET_WEATHER_REJECT,\n                  payload: err.response\n                });\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/max/Desktop/Work/Wather_app/react-redux-weather-app/src/redux/Actions.jsx"],"names":["WEATHER","axios","BASE_URL","toast","GetWeatherDetails","location","dispatch","type","GET_WEATHER_LOADING","get","params","q","units","lang","then","response","GET_WEATHER_SUCCESS","payload","data","catch","err","console","log","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","GET_WEATHER_REJECT"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,4BAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAACC,QAAD,uEAAY,MAAZ;AAAA;AAAA,wEAAuB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACtDA,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEP,OAAO,CAACQ;AAAhB,eAAD,CAAR;AACAP,cAAAA,KAAK,CACFQ,GADH,CACOP,QADP,EACiB;AACbQ,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,CAAC,EAAEN,QADG;AAENO,kBAAAA,KAAK,EAAE,QAFD;AAGNC,kBAAAA,IAAI,EAAE;AAHA;AADK,eADjB,EAQGC,IARH,CAQQ,UAAAC,QAAQ;AAAA,uBACZT,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEP,OAAO,CAACgB,mBAAhB;AAAqCC,kBAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAvD,iBAAD,CADI;AAAA,eARhB,EAWGC,KAXH,CAWS,UAAAC,GAAG,EAAI;AACZC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAhB,EAA0BK,GAA1B;AACAjB,gBAAAA,KAAK,CAACoB,KAAN,CAAYH,GAAG,CAACL,QAAJ,CAAaG,IAAb,CAAkBM,OAA9B,EAAuC;AACrCC,kBAAAA,QAAQ,EAAE,eAD2B;AAErCC,kBAAAA,SAAS,EAAE,IAF0B;AAGrCC,kBAAAA,eAAe,EAAE,KAHoB;AAIrCC,kBAAAA,YAAY,EAAE,IAJuB;AAKrCC,kBAAAA,YAAY,EAAE,KALuB;AAMrCC,kBAAAA,SAAS,EAAE;AAN0B,iBAAvC;AAQAxB,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEP,OAAO,CAAC+B,kBAAhB;AAAoCd,kBAAAA,OAAO,EAAEG,GAAG,CAACL;AAAjD,iBAAD,CAAR;AACD,eAtBH;;AAFsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import { WEATHER } from \"./Constants\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../components/ApiConstants\";\r\nimport { toast } from \"react-toastify\";\r\nexport const GetWeatherDetails = (location = \"Kyiv\") => async dispatch => {\r\n  dispatch({ type: WEATHER.GET_WEATHER_LOADING });\r\n  axios\r\n    .get(BASE_URL, {\r\n      params: {\r\n        q: location,\r\n        units: \"Metric\",\r\n        lang: \"en\"\r\n      }\r\n    })\r\n    .then(response =>\r\n      dispatch({ type: WEATHER.GET_WEATHER_SUCCESS, payload: response.data })\r\n    )\r\n    .catch(err => {\r\n      console.log(err.response, err);\r\n      toast.error(err.response.data.message, {\r\n        position: \"bottom-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false\r\n      });\r\n      dispatch({ type: WEATHER.GET_WEATHER_REJECT, payload: err.response });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}